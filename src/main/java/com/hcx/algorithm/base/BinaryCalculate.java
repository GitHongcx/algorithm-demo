package com.hcx.algorithm.base;

/**
 * @Title: BinaryCalculate.java
 * @Package com.hcx.algorithm.base
 * @Description: 二进制的加减乘除
 * @Author: hongcaixia
 * @Date: 2024/2/7 19:33
 * @Version V1.0
 */
public class BinaryCalculate {

    /**
     * 加法
     *     0 1 1 1
     *   + 1 1 1 0
     *   -------------
     *   1 0 1 0 1
     *
     *  1+0=1
     *  1+1=2 转为二进制 10 填0,往前进一位
     *  1+1+1(前面进的位)=3 转为二进制 11 填1,往前进一位
     *  0+1+1=2 转为二进制 10 填0,往前进一位
     */

    /**
     * 减法
     *     1 0 1 0 0 1
     *   - 0 1 1 0 1 0
     *   ----------------
     *     0 0 1 1 1 1
     *
     *  1-0=1
     *  0-1 不够减,往前借1(借到的是2), 2-1=1
     *  0-0 因为被借走了一位，所以0变成-1：-1-0，不够减，往前借1，2-1-0=1
     *  1-1 因为被借走了一位，所以1变成0：0-1，不够减，往前借1，2-1=1
     *  0-1 因为被借走了一位，所以0变成-1，-1-1，不够减，往前借1，2-1-1=0
     *  1-0 因为被借走了一位，所以1变成0，0-0=0
     */

    /**
     * 乘法
     *          1 0 0 1
     *        * 1 1 0 1
     *    ---------------------
     *          1 0 0 1
     *        0 0 0 0
     *      1 0 0 1
     *    1 0 0 1
     *   -----------------------
     *    1 1 1 0 1 0 1
     */

    /**
     * 除法 100110/110
     *              0 0 0 1 1    商
     *             -------------
     *  除数 1 1 0 ) 1 0 0 1 1 0  被除数
     *                1 1 0
     *              -----------
     *              0 0 1 1 1
     *                  1 1 0
     *                 ------------
     *                  0 0 1 0  余数
     *
     */

}
